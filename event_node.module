<?
// $Id$

// Copyright 2005 http://2bits.com

function event_node_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      // This description is shown in the listing at admin/modules.
      return t('Basic event content type for event module.');
    case 'node/add#event_node':
      // This description shows up when users click "create content."
      return t('This is an event node. It can be used to create basic event types, such as conferences, meetings, camps, ...etc.');
  }
}

function event_node_node_name($node) {
  return t('event');
}

function event_node_access($op, $node) {
  global $user;

  switch($op) {
    case 'view':
      if (user_access('access content') && ($user->uid == $node->uid)) {
        $access = true;
      }
      break;

    case 'create':
      $access = user_access('create content');
      break;

    case 'update':
    case 'delete':
      if (user_access('create content') && ($user->uid == $node->uid)) {
        $access = true;
      }
      break;
  }
  return $access;
}

function event_node_link($type, $node = 0, $main) {
  $links = array();

  if ($type == 'node' && $node->type == 'event') {
    // Don't display a redundant edit link if they are node administrators.
    if (event_node_access('update', $node) && !user_access('administer nodes')) {
      $links[] = l(t('edit this event'), "node/$node->nid/edit");
    }
  }

  return $links;
}

function event_node_menu($may_cache) {
  $items = array();

  if ($may_cache) {
    $items[] = array('path' => 'node/add/event', 'title' => t('event'),
      'access' => user_access('create content'));
  }

  return $items;
}

function event_node_form(&$node) {
  $output = '';

  // In order to be able to attach taxonomy terms to this node, we need
  // to display the appropriate form elements.
  if (function_exists('taxonomy_node_form')) {
    $output .= implode('', taxonomy_node_form('event', $node));
  }

  // Now we define the form elements specific to our node type.
  $output .= form_textarea(t('Body'), 'body', $node->body, 60, 20);
  $output .= filter_form('format', $node->format);

  return $output;
}

function event_node_view(&$node, $teaser = FALSE, $page = FALSE) {
  $order_info = theme('event_node_display', $node);
  $node = node_prepare($node, $teaser);
}

?>
